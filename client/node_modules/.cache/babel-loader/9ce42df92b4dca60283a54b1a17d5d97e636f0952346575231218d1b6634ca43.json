{"ast":null,"code":"// client/src/utils/api.js\nimport axios from 'axios';\n\n// Create an instance of axios with custom config\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  withCredentials: true // Important for cookies/sessions\n});\n\n// Add a request interceptor\napi.interceptors.request.use(config => {\n  // You can add common request handling here\n  return config;\n}, error => {\n  // Handle request errors\n  return Promise.reject(error);\n});\n\n// Add a response interceptor\napi.interceptors.response.use(response => {\n  // Any status code within the range of 2xx\n  return response;\n}, error => {\n  // Handle session expiry\n  if (error.response && error.response.status === 401) {\n    // Clear local auth state if needed\n    // window.location.href = '/login';\n  }\n\n  // Return the error for handling in components\n  return Promise.reject(error);\n});\nexport default api;\n\n// Helper functions for common API calls\n\n// Format date for API requests\nexport const formatDate = date => {\n  if (!date) return null;\n  if (typeof date === 'string') {\n    date = new Date(date);\n  }\n  return date.toISOString().split('T')[0];\n};\n\n// Format currency\nexport const formatCurrency = (amount, currency = 'USD') => {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency\n  }).format(amount);\n};\n\n// Format flight duration\nexport const formatDuration = durationStr => {\n  if (!durationStr) return '';\n\n  // Handle ISO duration format like PT2H30M\n  if (durationStr.startsWith('PT')) {\n    const hours = durationStr.match(/(\\d+)H/);\n    const minutes = durationStr.match(/(\\d+)M/);\n    return `${hours ? hours[1] + 'h ' : ''}${minutes ? minutes[1] + 'm' : ''}`.trim();\n  }\n\n  // Handle already formatted duration like \"2h 30m\"\n  return durationStr;\n};\n\n// Format date and time for display\nexport const formatDateTime = (dateTimeStr, includeYear = false) => {\n  if (!dateTimeStr) return '';\n  const date = new Date(dateTimeStr);\n  const options = {\n    weekday: 'short',\n    month: 'short',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: '2-digit'\n  };\n  if (includeYear) {\n    options.year = 'numeric';\n  }\n  return date.toLocaleString('en-US', options);\n};\n\n// Format date only\nexport const formatDateOnly = dateStr => {\n  if (!dateStr) return '';\n  const date = new Date(dateStr);\n  return date.toLocaleDateString('en-US', {\n    weekday: 'short',\n    month: 'short',\n    day: 'numeric',\n    year: 'numeric'\n  });\n};","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","withCredentials","interceptors","request","use","config","error","Promise","reject","response","status","formatDate","date","Date","toISOString","split","formatCurrency","amount","currency","Intl","NumberFormat","style","format","formatDuration","durationStr","startsWith","hours","match","minutes","trim","formatDateTime","dateTimeStr","includeYear","options","weekday","month","day","hour","minute","year","toLocaleString","formatDateOnly","dateStr","toLocaleDateString"],"sources":["C:/Users/Sulta/Documents/CodingProject/faresight/client/src/utils/api.js"],"sourcesContent":["// client/src/utils/api.js\r\nimport axios from 'axios';\r\n\r\n// Create an instance of axios with custom config\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  },\r\n  withCredentials: true // Important for cookies/sessions\r\n});\r\n\r\n// Add a request interceptor\r\napi.interceptors.request.use(\r\n  config => {\r\n    // You can add common request handling here\r\n    return config;\r\n  },\r\n  error => {\r\n    // Handle request errors\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add a response interceptor\r\napi.interceptors.response.use(\r\n  response => {\r\n    // Any status code within the range of 2xx\r\n    return response;\r\n  },\r\n  error => {\r\n    // Handle session expiry\r\n    if (error.response && error.response.status === 401) {\r\n      // Clear local auth state if needed\r\n      // window.location.href = '/login';\r\n    }\r\n    \r\n    // Return the error for handling in components\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;\r\n\r\n// Helper functions for common API calls\r\n\r\n// Format date for API requests\r\nexport const formatDate = (date) => {\r\n  if (!date) return null;\r\n  \r\n  if (typeof date === 'string') {\r\n    date = new Date(date);\r\n  }\r\n  \r\n  return date.toISOString().split('T')[0];\r\n};\r\n\r\n// Format currency\r\nexport const formatCurrency = (amount, currency = 'USD') => {\r\n  return new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency\r\n  }).format(amount);\r\n};\r\n\r\n// Format flight duration\r\nexport const formatDuration = (durationStr) => {\r\n  if (!durationStr) return '';\r\n  \r\n  // Handle ISO duration format like PT2H30M\r\n  if (durationStr.startsWith('PT')) {\r\n    const hours = durationStr.match(/(\\d+)H/);\r\n    const minutes = durationStr.match(/(\\d+)M/);\r\n    \r\n    return `${hours ? hours[1] + 'h ' : ''}${minutes ? minutes[1] + 'm' : ''}`.trim();\r\n  }\r\n  \r\n  // Handle already formatted duration like \"2h 30m\"\r\n  return durationStr;\r\n};\r\n\r\n// Format date and time for display\r\nexport const formatDateTime = (dateTimeStr, includeYear = false) => {\r\n  if (!dateTimeStr) return '';\r\n  \r\n  const date = new Date(dateTimeStr);\r\n  const options = {\r\n    weekday: 'short',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    hour: 'numeric',\r\n    minute: '2-digit'\r\n  };\r\n  \r\n  if (includeYear) {\r\n    options.year = 'numeric';\r\n  }\r\n  \r\n  return date.toLocaleString('en-US', options);\r\n};\r\n\r\n// Format date only\r\nexport const formatDateOnly = (dateStr) => {\r\n  if (!dateStr) return '';\r\n  \r\n  const date = new Date(dateStr);\r\n  return date.toLocaleDateString('en-US', {\r\n    weekday: 'short',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    year: 'numeric'\r\n  });\r\n};"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;EACrEC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB,CAAC;EACDC,eAAe,EAAE,IAAI,CAAC;AACxB,CAAC,CAAC;;AAEF;AACAP,GAAG,CAACQ,YAAY,CAACC,OAAO,CAACC,GAAG,CAC1BC,MAAM,IAAI;EACR;EACA,OAAOA,MAAM;AACf,CAAC,EACDC,KAAK,IAAI;EACP;EACA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAZ,GAAG,CAACQ,YAAY,CAACO,QAAQ,CAACL,GAAG,CAC3BK,QAAQ,IAAI;EACV;EACA,OAAOA,QAAQ;AACjB,CAAC,EACDH,KAAK,IAAI;EACP;EACA,IAAIA,KAAK,CAACG,QAAQ,IAAIH,KAAK,CAACG,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;IACnD;IACA;EAAA;;EAGF;EACA,OAAOH,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeZ,GAAG;;AAElB;;AAEA;AACA,OAAO,MAAMiB,UAAU,GAAIC,IAAI,IAAK;EAClC,IAAI,CAACA,IAAI,EAAE,OAAO,IAAI;EAEtB,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;IAC5BA,IAAI,GAAG,IAAIC,IAAI,CAACD,IAAI,CAAC;EACvB;EAEA,OAAOA,IAAI,CAACE,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC;;AAED;AACA,OAAO,MAAMC,cAAc,GAAGA,CAACC,MAAM,EAAEC,QAAQ,GAAG,KAAK,KAAK;EAC1D,OAAO,IAAIC,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;IACpCC,KAAK,EAAE,UAAU;IACjBH;EACF,CAAC,CAAC,CAACI,MAAM,CAACL,MAAM,CAAC;AACnB,CAAC;;AAED;AACA,OAAO,MAAMM,cAAc,GAAIC,WAAW,IAAK;EAC7C,IAAI,CAACA,WAAW,EAAE,OAAO,EAAE;;EAE3B;EACA,IAAIA,WAAW,CAACC,UAAU,CAAC,IAAI,CAAC,EAAE;IAChC,MAAMC,KAAK,GAAGF,WAAW,CAACG,KAAK,CAAC,QAAQ,CAAC;IACzC,MAAMC,OAAO,GAAGJ,WAAW,CAACG,KAAK,CAAC,QAAQ,CAAC;IAE3C,OAAO,GAAGD,KAAK,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAGE,OAAO,GAAGA,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE,EAAE,CAACC,IAAI,CAAC,CAAC;EACnF;;EAEA;EACA,OAAOL,WAAW;AACpB,CAAC;;AAED;AACA,OAAO,MAAMM,cAAc,GAAGA,CAACC,WAAW,EAAEC,WAAW,GAAG,KAAK,KAAK;EAClE,IAAI,CAACD,WAAW,EAAE,OAAO,EAAE;EAE3B,MAAMnB,IAAI,GAAG,IAAIC,IAAI,CAACkB,WAAW,CAAC;EAClC,MAAME,OAAO,GAAG;IACdC,OAAO,EAAE,OAAO;IAChBC,KAAK,EAAE,OAAO;IACdC,GAAG,EAAE,SAAS;IACdC,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE;EACV,CAAC;EAED,IAAIN,WAAW,EAAE;IACfC,OAAO,CAACM,IAAI,GAAG,SAAS;EAC1B;EAEA,OAAO3B,IAAI,CAAC4B,cAAc,CAAC,OAAO,EAAEP,OAAO,CAAC;AAC9C,CAAC;;AAED;AACA,OAAO,MAAMQ,cAAc,GAAIC,OAAO,IAAK;EACzC,IAAI,CAACA,OAAO,EAAE,OAAO,EAAE;EAEvB,MAAM9B,IAAI,GAAG,IAAIC,IAAI,CAAC6B,OAAO,CAAC;EAC9B,OAAO9B,IAAI,CAAC+B,kBAAkB,CAAC,OAAO,EAAE;IACtCT,OAAO,EAAE,OAAO;IAChBC,KAAK,EAAE,OAAO;IACdC,GAAG,EAAE,SAAS;IACdG,IAAI,EAAE;EACR,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}