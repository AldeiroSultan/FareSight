{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sulta\\\\Documents\\\\CodingProject\\\\faresight\\\\client\\\\src\\\\contexts\\\\AlertContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// client/src/contexts/AlertContext.js\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport api from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AlertContext = /*#__PURE__*/createContext();\nexport const useAlerts = () => {\n  _s();\n  return useContext(AlertContext);\n};\n_s(useAlerts, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AlertProvider = ({\n  children\n}) => {\n  _s2();\n  const [alerts, setAlerts] = useState([]);\n  const [alertHistory, setAlertHistory] = useState([]);\n  const [preferences, setPreferences] = useState({\n    emailAlerts: true,\n    priceDropPercentage: 15,\n    mistakeFareThreshold: 40\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Fetch all alerts for the user\n  const fetchAlerts = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await api.get('/alerts');\n      setAlerts(response.data);\n      return response.data;\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Error fetching alerts');\n      return [];\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch alert history\n  const fetchAlertHistory = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await api.get('/alerts/history');\n      setAlertHistory(response.data);\n      return response.data;\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Error fetching alert history');\n      return [];\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch alert preferences\n  const fetchPreferences = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await api.get('/alerts/preferences');\n      setPreferences(response.data);\n      return response.data;\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || 'Error fetching alert preferences');\n      return null;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Create a new alert\n  const createAlert = async alertData => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await api.post('/alerts', alertData);\n\n      // Refresh alerts after creating a new one\n      fetchAlerts();\n      return response.data;\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      setError(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || 'Error creating alert');\n      return null;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Update an existing alert\n  const updateAlert = async (id, alertData) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await api.put(`/alerts/${id}`, alertData);\n\n      // Update the alert in the state\n      setAlerts(prevAlerts => prevAlerts.map(alert => alert.id === id ? {\n        ...alert,\n        ...alertData\n      } : alert));\n      return response.data;\n    } catch (err) {\n      var _err$response5, _err$response5$data;\n      setError(((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.message) || 'Error updating alert');\n      return null;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Delete an alert\n  const deleteAlert = async id => {\n    try {\n      setLoading(true);\n      setError(null);\n      await api.delete(`/alerts/${id}`);\n\n      // Remove the alert from the state\n      setAlerts(prevAlerts => prevAlerts.filter(alert => alert.id !== id));\n      return true;\n    } catch (err) {\n      var _err$response6, _err$response6$data;\n      setError(((_err$response6 = err.response) === null || _err$response6 === void 0 ? void 0 : (_err$response6$data = _err$response6.data) === null || _err$response6$data === void 0 ? void 0 : _err$response6$data.message) || 'Error deleting alert');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Update alert preferences\n  const updatePreferences = async preferencesData => {\n    try {\n      setLoading(true);\n      setError(null);\n      await api.put('/alerts/preferences', preferencesData);\n\n      // Update the preferences in the state\n      setPreferences(prev => ({\n        ...prev,\n        ...preferencesData\n      }));\n      return true;\n    } catch (err) {\n      var _err$response7, _err$response7$data;\n      setError(((_err$response7 = err.response) === null || _err$response7 === void 0 ? void 0 : (_err$response7$data = _err$response7.data) === null || _err$response7$data === void 0 ? void 0 : _err$response7$data.message) || 'Error updating preferences');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Clear errors\n  const clearError = () => setError(null);\n  const value = {\n    alerts,\n    alertHistory,\n    preferences,\n    loading,\n    error,\n    fetchAlerts,\n    fetchAlertHistory,\n    fetchPreferences,\n    createAlert,\n    updateAlert,\n    deleteAlert,\n    updatePreferences,\n    clearError\n  };\n  return /*#__PURE__*/_jsxDEV(AlertContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 10\n  }, this);\n};\n_s2(AlertProvider, \"gaJov+TPqiajFGNwKDPzGMQYsEk=\");\n_c = AlertProvider;\nvar _c;\n$RefreshReg$(_c, \"AlertProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","api","jsxDEV","_jsxDEV","AlertContext","useAlerts","_s","AlertProvider","children","_s2","alerts","setAlerts","alertHistory","setAlertHistory","preferences","setPreferences","emailAlerts","priceDropPercentage","mistakeFareThreshold","loading","setLoading","error","setError","fetchAlerts","response","get","data","err","_err$response","_err$response$data","message","fetchAlertHistory","_err$response2","_err$response2$data","fetchPreferences","_err$response3","_err$response3$data","createAlert","alertData","post","_err$response4","_err$response4$data","updateAlert","id","put","prevAlerts","map","alert","_err$response5","_err$response5$data","deleteAlert","delete","filter","_err$response6","_err$response6$data","updatePreferences","preferencesData","prev","_err$response7","_err$response7$data","clearError","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Sulta/Documents/CodingProject/faresight/client/src/contexts/AlertContext.js"],"sourcesContent":["// client/src/contexts/AlertContext.js\r\nimport React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport api from '../utils/api';\r\n\r\nconst AlertContext = createContext();\r\n\r\nexport const useAlerts = () => useContext(AlertContext);\r\n\r\nexport const AlertProvider = ({ children }) => {\r\n  const [alerts, setAlerts] = useState([]);\r\n  const [alertHistory, setAlertHistory] = useState([]);\r\n  const [preferences, setPreferences] = useState({\r\n    emailAlerts: true,\r\n    priceDropPercentage: 15,\r\n    mistakeFareThreshold: 40\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Fetch all alerts for the user\r\n  const fetchAlerts = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await api.get('/alerts');\r\n      \r\n      setAlerts(response.data);\r\n      \r\n      return response.data;\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Error fetching alerts');\r\n      return [];\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fetch alert history\r\n  const fetchAlertHistory = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await api.get('/alerts/history');\r\n      \r\n      setAlertHistory(response.data);\r\n      \r\n      return response.data;\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Error fetching alert history');\r\n      return [];\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fetch alert preferences\r\n  const fetchPreferences = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await api.get('/alerts/preferences');\r\n      \r\n      setPreferences(response.data);\r\n      \r\n      return response.data;\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Error fetching alert preferences');\r\n      return null;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Create a new alert\r\n  const createAlert = async (alertData) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await api.post('/alerts', alertData);\r\n      \r\n      // Refresh alerts after creating a new one\r\n      fetchAlerts();\r\n      \r\n      return response.data;\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Error creating alert');\r\n      return null;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Update an existing alert\r\n  const updateAlert = async (id, alertData) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await api.put(`/alerts/${id}`, alertData);\r\n      \r\n      // Update the alert in the state\r\n      setAlerts(prevAlerts => \r\n        prevAlerts.map(alert => \r\n          alert.id === id ? { ...alert, ...alertData } : alert\r\n        )\r\n      );\r\n      \r\n      return response.data;\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Error updating alert');\r\n      return null;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Delete an alert\r\n  const deleteAlert = async (id) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      await api.delete(`/alerts/${id}`);\r\n      \r\n      // Remove the alert from the state\r\n      setAlerts(prevAlerts => prevAlerts.filter(alert => alert.id !== id));\r\n      \r\n      return true;\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Error deleting alert');\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Update alert preferences\r\n  const updatePreferences = async (preferencesData) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      await api.put('/alerts/preferences', preferencesData);\r\n      \r\n      // Update the preferences in the state\r\n      setPreferences(prev => ({ ...prev, ...preferencesData }));\r\n      \r\n      return true;\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Error updating preferences');\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Clear errors\r\n  const clearError = () => setError(null);\r\n\r\n  const value = {\r\n    alerts,\r\n    alertHistory,\r\n    preferences,\r\n    loading,\r\n    error,\r\n    fetchAlerts,\r\n    fetchAlertHistory,\r\n    fetchPreferences,\r\n    createAlert,\r\n    updateAlert,\r\n    deleteAlert,\r\n    updatePreferences,\r\n    clearError\r\n  };\r\n\r\n  return <AlertContext.Provider value={value}>{children}</AlertContext.Provider>;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}